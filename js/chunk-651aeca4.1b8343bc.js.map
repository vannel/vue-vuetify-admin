{"version":3,"sources":["webpack:///./node_modules/jsonlint/lib/jsonlint.js","webpack:///./src/demo/views/Components/jsonEditor.vue?1a4a","webpack:///./src/demo/components/JsonEditor/index.vue?2854","webpack:///src/demo/components/JsonEditor/index.vue","webpack:///./src/demo/components/JsonEditor/index.vue?f1bd","webpack:///./src/demo/components/JsonEditor/index.vue?c979","webpack:///src/demo/views/Components/jsonEditor.vue","webpack:///./src/demo/views/Components/jsonEditor.vue?b171","webpack:///./src/demo/views/Components/jsonEditor.vue","webpack:///./node_modules/codemirror/addon/lint/lint.js","webpack:///./node_modules/jsonlint/lib/jsonlint.js?5f8f","webpack:///./src/demo/components/JsonEditor/index.vue?7965","webpack:///./node_modules/codemirror/addon/lint/json-lint.js","webpack:///./node_modules/script-loader/addScript.js","webpack:///./node_modules/codemirror/mode/javascript/javascript.js"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","$t","ref","model","value","callback","$$v","expression","staticRenderFns","name","props","type","Object","default","data","jsonEditor","watch","setValue","JSON","stringify","mounted","lineNumbers","mode","gutters","theme","lint","on","methods","getValue","component","components","VAlert","VCol","VContainer","VRow","mod","CodeMirror","GUTTER_ID","showTooltip","e","content","tt","document","createElement","position","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","appendChild","cloneNode","body","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","n","nodeType","host","clearInterval","LintState","cm","options","hasGutter","marked","timeout","onMouseOver","waitingFor","parseOptions","_cm","Function","getAnnotations","clearMarks","state","clearGutter","i","length","clear","makeMarker","labels","severity","multiple","tooltips","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","line","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","passOptions","id","abort","arg2","operation","updateLinting","startLinting","getHelper","Pos","async","then","issues","annotationsNotSorted","anns","maxSeverity","tipLabel","createDocumentFragment","formatAnnotation","to","markText","__annotation","setGutterMarker","onUpdateLinting","onChange","clearTimeout","delay","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","lintOnChange","getWrapperElement","getOption","hasLintGutter","defineExtension","registerHelper","text","found","window","jsonlint","console","error","parser","parseError","str","hash","loc","first_line","first_column","last_line","last_column","parse","src","log","isIE","attachEvent","addEventListener","execScript","eval","call","defineMode","config","parserConfig","indentUnit","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","A","B","C","D","operator","atom","isOperatorChar","isJsonldKeyword","readRegexp","stream","next","escaped","inSet","ret","tp","cont","tokenBase","ch","tokenize","tokenString","match","eat","tokenComment","skipToEnd","expressionAllowed","current","tokenQuasi","lexical","eatWhile","word","lastType","propertyIsEnumerable","quote","peek","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","string","indexOf","start","m","exec","slice","index","depth","sawSomething","pos","charAt","bracket","atomicTypes","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","cx","context","vars","parseJS","cc","hasOwnProperty","combinator","pop","statement","lex","pass","arguments","apply","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","result","indent","outer","poplex","expect","wanted","exp","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","property","backUp","continueQuasi","targetNoComma","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","textAfter","startState","basecolumn","token","sol","indentation","eatSpace","Pass","firstChar","c","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","closeBrackets","helperType","skipExpression","defineMIME"],"mappings":"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","file":"js/chunk-651aeca4.1b8343bc.js","sourcesContent":["module.exports = \"/* Jison generated parser */\\nvar jsonlint = (function(){\\nvar parser = {trace: function trace() { },\\nyy: {},\\nsymbols_: {\\\"error\\\":2,\\\"JSONString\\\":3,\\\"STRING\\\":4,\\\"JSONNumber\\\":5,\\\"NUMBER\\\":6,\\\"JSONNullLiteral\\\":7,\\\"NULL\\\":8,\\\"JSONBooleanLiteral\\\":9,\\\"TRUE\\\":10,\\\"FALSE\\\":11,\\\"JSONText\\\":12,\\\"JSONValue\\\":13,\\\"EOF\\\":14,\\\"JSONObject\\\":15,\\\"JSONArray\\\":16,\\\"{\\\":17,\\\"}\\\":18,\\\"JSONMemberList\\\":19,\\\"JSONMember\\\":20,\\\":\\\":21,\\\",\\\":22,\\\"[\\\":23,\\\"]\\\":24,\\\"JSONElementList\\\":25,\\\"$accept\\\":0,\\\"$end\\\":1},\\nterminals_: {2:\\\"error\\\",4:\\\"STRING\\\",6:\\\"NUMBER\\\",8:\\\"NULL\\\",10:\\\"TRUE\\\",11:\\\"FALSE\\\",14:\\\"EOF\\\",17:\\\"{\\\",18:\\\"}\\\",21:\\\":\\\",22:\\\",\\\",23:\\\"[\\\",24:\\\"]\\\"},\\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\\n\\nvar $0 = $$.length - 1;\\nswitch (yystate) {\\ncase 1: // replace escaped characters with actual character\\n          this.$ = yytext.replace(/\\\\\\\\(\\\\\\\\|\\\")/g, \\\"$\\\"+\\\"1\\\")\\n                     .replace(/\\\\\\\\n/g,'\\\\n')\\n                     .replace(/\\\\\\\\r/g,'\\\\r')\\n                     .replace(/\\\\\\\\t/g,'\\\\t')\\n                     .replace(/\\\\\\\\v/g,'\\\\v')\\n                     .replace(/\\\\\\\\f/g,'\\\\f')\\n                     .replace(/\\\\\\\\b/g,'\\\\b');\\n        \\nbreak;\\ncase 2:this.$ = Number(yytext);\\nbreak;\\ncase 3:this.$ = null;\\nbreak;\\ncase 4:this.$ = true;\\nbreak;\\ncase 5:this.$ = false;\\nbreak;\\ncase 6:return this.$ = $$[$0-1];\\nbreak;\\ncase 13:this.$ = {};\\nbreak;\\ncase 14:this.$ = $$[$0-1];\\nbreak;\\ncase 15:this.$ = [$$[$0-2], $$[$0]];\\nbreak;\\ncase 16:this.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\\nbreak;\\ncase 17:this.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\\nbreak;\\ncase 18:this.$ = [];\\nbreak;\\ncase 19:this.$ = $$[$0-1];\\nbreak;\\ncase 20:this.$ = [$$[$0]];\\nbreak;\\ncase 21:this.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\\nbreak;\\n}\\n},\\ntable: [{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],12:1,13:2,15:7,16:8,17:[1,14],23:[1,15]},{1:[3]},{14:[1,16]},{14:[2,7],18:[2,7],22:[2,7],24:[2,7]},{14:[2,8],18:[2,8],22:[2,8],24:[2,8]},{14:[2,9],18:[2,9],22:[2,9],24:[2,9]},{14:[2,10],18:[2,10],22:[2,10],24:[2,10]},{14:[2,11],18:[2,11],22:[2,11],24:[2,11]},{14:[2,12],18:[2,12],22:[2,12],24:[2,12]},{14:[2,3],18:[2,3],22:[2,3],24:[2,3]},{14:[2,4],18:[2,4],22:[2,4],24:[2,4]},{14:[2,5],18:[2,5],22:[2,5],24:[2,5]},{14:[2,1],18:[2,1],21:[2,1],22:[2,1],24:[2,1]},{14:[2,2],18:[2,2],22:[2,2],24:[2,2]},{3:20,4:[1,12],18:[1,17],19:18,20:19},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:23,15:7,16:8,17:[1,14],23:[1,15],24:[1,21],25:22},{1:[2,6]},{14:[2,13],18:[2,13],22:[2,13],24:[2,13]},{18:[1,24],22:[1,25]},{18:[2,16],22:[2,16]},{21:[1,26]},{14:[2,18],18:[2,18],22:[2,18],24:[2,18]},{22:[1,28],24:[1,27]},{22:[2,20],24:[2,20]},{14:[2,14],18:[2,14],22:[2,14],24:[2,14]},{3:20,4:[1,12],20:29},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:30,15:7,16:8,17:[1,14],23:[1,15]},{14:[2,19],18:[2,19],22:[2,19],24:[2,19]},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:31,15:7,16:8,17:[1,14],23:[1,15]},{18:[2,17],22:[2,17]},{18:[2,15],22:[2,15]},{22:[2,21],24:[2,21]}],\\ndefaultActions: {16:[2,6]},\\nparseError: function parseError(str, hash) {\\n    throw new Error(str);\\n},\\nparse: function parse(input) {\\n    var self = this,\\n        stack = [0],\\n        vstack = [null], // semantic value stack\\n        lstack = [], // location stack\\n        table = this.table,\\n        yytext = '',\\n        yylineno = 0,\\n        yyleng = 0,\\n        recovering = 0,\\n        TERROR = 2,\\n        EOF = 1;\\n\\n    //this.reductionCount = this.shiftCount = 0;\\n\\n    this.lexer.setInput(input);\\n    this.lexer.yy = this.yy;\\n    this.yy.lexer = this.lexer;\\n    if (typeof this.lexer.yylloc == 'undefined')\\n        this.lexer.yylloc = {};\\n    var yyloc = this.lexer.yylloc;\\n    lstack.push(yyloc);\\n\\n    if (typeof this.yy.parseError === 'function')\\n        this.parseError = this.yy.parseError;\\n\\n    function popStack (n) {\\n        stack.length = stack.length - 2*n;\\n        vstack.length = vstack.length - n;\\n        lstack.length = lstack.length - n;\\n    }\\n\\n    function lex() {\\n        var token;\\n        token = self.lexer.lex() || 1; // $end = 1\\n        // if token isn't its numeric value, convert\\n        if (typeof token !== 'number') {\\n            token = self.symbols_[token] || token;\\n        }\\n        return token;\\n    }\\n\\n    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\\n    while (true) {\\n        // retreive state number from top of stack\\n        state = stack[stack.length-1];\\n\\n        // use default actions if available\\n        if (this.defaultActions[state]) {\\n            action = this.defaultActions[state];\\n        } else {\\n            if (symbol == null)\\n                symbol = lex();\\n            // read action for current state and first input\\n            action = table[state] && table[state][symbol];\\n        }\\n\\n        // handle parse error\\n        _handle_error:\\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\\n\\n            if (!recovering) {\\n                // Report error\\n                expected = [];\\n                for (p in table[state]) if (this.terminals_[p] && p > 2) {\\n                    expected.push(\\\"'\\\"+this.terminals_[p]+\\\"'\\\");\\n                }\\n                var errStr = '';\\n                if (this.lexer.showPosition) {\\n                    errStr = 'Parse error on line '+(yylineno+1)+\\\":\\\\n\\\"+this.lexer.showPosition()+\\\"\\\\nExpecting \\\"+expected.join(', ') + \\\", got '\\\" + this.terminals_[symbol]+ \\\"'\\\";\\n                } else {\\n                    errStr = 'Parse error on line '+(yylineno+1)+\\\": Unexpected \\\" +\\n                                  (symbol == 1 /*EOF*/ ? \\\"end of input\\\" :\\n                                              (\\\"'\\\"+(this.terminals_[symbol] || symbol)+\\\"'\\\"));\\n                }\\n                this.parseError(errStr,\\n                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\\n            }\\n\\n            // just recovered from another error\\n            if (recovering == 3) {\\n                if (symbol == EOF) {\\n                    throw new Error(errStr || 'Parsing halted.');\\n                }\\n\\n                // discard current lookahead and grab another\\n                yyleng = this.lexer.yyleng;\\n                yytext = this.lexer.yytext;\\n                yylineno = this.lexer.yylineno;\\n                yyloc = this.lexer.yylloc;\\n                symbol = lex();\\n            }\\n\\n            // try to recover from error\\n            while (1) {\\n                // check for error recovery rule in this state\\n                if ((TERROR.toString()) in table[state]) {\\n                    break;\\n                }\\n                if (state == 0) {\\n                    throw new Error(errStr || 'Parsing halted.');\\n                }\\n                popStack(1);\\n                state = stack[stack.length-1];\\n            }\\n\\n            preErrorSymbol = symbol; // save the lookahead token\\n            symbol = TERROR;         // insert generic error symbol as new lookahead\\n            state = stack[stack.length-1];\\n            action = table[state] && table[state][TERROR];\\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\\n        }\\n\\n        // this shouldn't happen, unless resolve defaults are off\\n        if (action[0] instanceof Array && action.length > 1) {\\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\\n        }\\n\\n        switch (action[0]) {\\n\\n            case 1: // shift\\n                //this.shiftCount++;\\n\\n                stack.push(symbol);\\n                vstack.push(this.lexer.yytext);\\n                lstack.push(this.lexer.yylloc);\\n                stack.push(action[1]); // push state\\n                symbol = null;\\n                if (!preErrorSymbol) { // normal execution/no error\\n                    yyleng = this.lexer.yyleng;\\n                    yytext = this.lexer.yytext;\\n                    yylineno = this.lexer.yylineno;\\n                    yyloc = this.lexer.yylloc;\\n                    if (recovering > 0)\\n                        recovering--;\\n                } else { // error just occurred, resume old lookahead f/ before error\\n                    symbol = preErrorSymbol;\\n                    preErrorSymbol = null;\\n                }\\n                break;\\n\\n            case 2: // reduce\\n                //this.reductionCount++;\\n\\n                len = this.productions_[action[1]][1];\\n\\n                // perform semantic action\\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\\n                // default location, uses first token for firsts, last for lasts\\n                yyval._$ = {\\n                    first_line: lstack[lstack.length-(len||1)].first_line,\\n                    last_line: lstack[lstack.length-1].last_line,\\n                    first_column: lstack[lstack.length-(len||1)].first_column,\\n                    last_column: lstack[lstack.length-1].last_column\\n                };\\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\\n\\n                if (typeof r !== 'undefined') {\\n                    return r;\\n                }\\n\\n                // pop off stack\\n                if (len) {\\n                    stack = stack.slice(0,-1*len*2);\\n                    vstack = vstack.slice(0, -1*len);\\n                    lstack = lstack.slice(0, -1*len);\\n                }\\n\\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\\n                vstack.push(yyval.$);\\n                lstack.push(yyval._$);\\n                // goto new state = table[STATE][NONTERMINAL]\\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\\n                stack.push(newState);\\n                break;\\n\\n            case 3: // accept\\n                return true;\\n        }\\n\\n    }\\n\\n    return true;\\n}};\\n/* Jison generated lexer */\\nvar lexer = (function(){\\nvar lexer = ({EOF:1,\\nparseError:function parseError(str, hash) {\\n        if (this.yy.parseError) {\\n            this.yy.parseError(str, hash);\\n        } else {\\n            throw new Error(str);\\n        }\\n    },\\nsetInput:function (input) {\\n        this._input = input;\\n        this._more = this._less = this.done = false;\\n        this.yylineno = this.yyleng = 0;\\n        this.yytext = this.matched = this.match = '';\\n        this.conditionStack = ['INITIAL'];\\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\\n        return this;\\n    },\\ninput:function () {\\n        var ch = this._input[0];\\n        this.yytext+=ch;\\n        this.yyleng++;\\n        this.match+=ch;\\n        this.matched+=ch;\\n        var lines = ch.match(/\\\\n/);\\n        if (lines) this.yylineno++;\\n        this._input = this._input.slice(1);\\n        return ch;\\n    },\\nunput:function (ch) {\\n        this._input = ch + this._input;\\n        return this;\\n    },\\nmore:function () {\\n        this._more = true;\\n        return this;\\n    },\\nless:function (n) {\\n        this._input = this.match.slice(n) + this._input;\\n    },\\npastInput:function () {\\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\\\n/g, \\\"\\\");\\n    },\\nupcomingInput:function () {\\n        var next = this.match;\\n        if (next.length < 20) {\\n            next += this._input.substr(0, 20-next.length);\\n        }\\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\\\n/g, \\\"\\\");\\n    },\\nshowPosition:function () {\\n        var pre = this.pastInput();\\n        var c = new Array(pre.length + 1).join(\\\"-\\\");\\n        return pre + this.upcomingInput() + \\\"\\\\n\\\" + c+\\\"^\\\";\\n    },\\nnext:function () {\\n        if (this.done) {\\n            return this.EOF;\\n        }\\n        if (!this._input) this.done = true;\\n\\n        var token,\\n            match,\\n            tempMatch,\\n            index,\\n            col,\\n            lines;\\n        if (!this._more) {\\n            this.yytext = '';\\n            this.match = '';\\n        }\\n        var rules = this._currentRules();\\n        for (var i=0;i < rules.length; i++) {\\n            tempMatch = this._input.match(this.rules[rules[i]]);\\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\\n                match = tempMatch;\\n                index = i;\\n                if (!this.options.flex) break;\\n            }\\n        }\\n        if (match) {\\n            lines = match[0].match(/\\\\n.*/g);\\n            if (lines) this.yylineno += lines.length;\\n            this.yylloc = {first_line: this.yylloc.last_line,\\n                           last_line: this.yylineno+1,\\n                           first_column: this.yylloc.last_column,\\n                           last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}\\n            this.yytext += match[0];\\n            this.match += match[0];\\n            this.yyleng = this.yytext.length;\\n            this._more = false;\\n            this._input = this._input.slice(match[0].length);\\n            this.matched += match[0];\\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\\n            if (this.done && this._input) this.done = false;\\n            if (token) return token;\\n            else return;\\n        }\\n        if (this._input === \\\"\\\") {\\n            return this.EOF;\\n        } else {\\n            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\\\n'+this.showPosition(), \\n                    {text: \\\"\\\", token: null, line: this.yylineno});\\n        }\\n    },\\nlex:function lex() {\\n        var r = this.next();\\n        if (typeof r !== 'undefined') {\\n            return r;\\n        } else {\\n            return this.lex();\\n        }\\n    },\\nbegin:function begin(condition) {\\n        this.conditionStack.push(condition);\\n    },\\npopState:function popState() {\\n        return this.conditionStack.pop();\\n    },\\n_currentRules:function _currentRules() {\\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\\n    },\\ntopState:function () {\\n        return this.conditionStack[this.conditionStack.length-2];\\n    },\\npushState:function begin(condition) {\\n        this.begin(condition);\\n    }});\\nlexer.options = {};\\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\\n\\nvar YYSTATE=YY_START\\nswitch($avoiding_name_collisions) {\\ncase 0:/* skip whitespace */\\nbreak;\\ncase 1:return 6\\nbreak;\\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\\nbreak;\\ncase 3:return 17\\nbreak;\\ncase 4:return 18\\nbreak;\\ncase 5:return 23\\nbreak;\\ncase 6:return 24\\nbreak;\\ncase 7:return 22\\nbreak;\\ncase 8:return 21\\nbreak;\\ncase 9:return 10\\nbreak;\\ncase 10:return 11\\nbreak;\\ncase 11:return 8\\nbreak;\\ncase 12:return 14\\nbreak;\\ncase 13:return 'INVALID'\\nbreak;\\n}\\n};\\nlexer.rules = [/^(?:\\\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\\\.[0-9]+)?([eE][-+]?[0-9]+)?\\\\b)/,/^(?:\\\"(?:\\\\\\\\[\\\\\\\\\\\"bfnrt/]|\\\\\\\\u[a-fA-F0-9]{4}|[^\\\\\\\\\\\\0-\\\\x09\\\\x0a-\\\\x1f\\\"])*\\\")/,/^(?:\\\\{)/,/^(?:\\\\})/,/^(?:\\\\[)/,/^(?:\\\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\\\b)/,/^(?:false\\\\b)/,/^(?:null\\\\b)/,/^(?:$)/,/^(?:.)/];\\nlexer.conditions = {\\\"INITIAL\\\":{\\\"rules\\\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\\\"inclusive\\\":true}};\\n\\n\\n;\\nreturn lexer;})()\\nparser.lexer = lexer;\\nreturn parser;\\n})();\\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\\nexports.parser = jsonlint;\\nexports.parse = function () { return jsonlint.parse.apply(jsonlint, arguments); }\\nexports.main = function commonjsMain(args) {\\n    if (!args[1])\\n        throw new Error('Usage: '+args[0]+' FILE');\\n    if (typeof process !== 'undefined') {\\n        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), \\\"utf8\\\");\\n    } else {\\n        var cwd = require(\\\"file\\\").path(require(\\\"file\\\").cwd());\\n        var source = cwd.join(args[1]).read({charset: \\\"utf-8\\\"});\\n    }\\n    return exports.parser.parse(source);\\n}\\nif (typeof module !== 'undefined' && require.main === module) {\\n  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require(\\\"system\\\").args);\\n}\\n}\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"container--fluid grid-list-md\"},[_c('v-row',[_c('v-col',{staticClass:\"flex-grow-1\",attrs:{\"cols\":\"12\"}},[_c('v-alert',{attrs:{\"value\":true,\"color\":\"info\",\"outlined\":\"\",\"dense\":\"\"}},[_vm._v(\" JsonEditor \"+_vm._s(_vm.$t('components.baseOn'))+\" \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"https://github.com/codemirror/CodeMirror\"}},[_vm._v(\"CodeMirrorr\")]),_vm._v(\", lint \"+_vm._s(_vm.$t('components.baseOn'))+\" json-lint \")])],1),_c('v-col',{staticClass:\"flex-grow-1\",attrs:{\"cols\":\"12\"}},[_c('json-editor',{ref:\"jsonEditor\",model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"json-editor\"},[_c('textarea',{ref:\"textarea\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"json-editor\">\n    <textarea ref=\"textarea\" />\n  </div>\n</template>\n\n<script>\nimport CodeMirror from 'codemirror';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/rubyblue.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror/addon/lint/json-lint';\n// eslint-disable-next-line\nrequire('script-loader!jsonlint');\n\nexport default {\n  name: 'JsonEditor',\n  props: {\n    value: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data() {\n    return {\n      jsonEditor: false,\n    };\n  },\n  watch: {\n    value(value) {\n      const editorValue = this.jsonEditor.getValue();\n      if (value !== editorValue) {\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2));\n      }\n    },\n  },\n  mounted() {\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\n      lineNumbers: true,\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      theme: 'rubyblue',\n      lint: true,\n    });\n\n    this.jsonEditor.setValue(JSON.stringify(this.value, null, 2));\n    this.jsonEditor.on('change', (cm) => {\n      this.$emit('changed', cm.getValue());\n      this.$emit('input', cm.getValue());\n    });\n  },\n  methods: {\n    getValue() {\n      return this.jsonEditor.getValue();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.json-editor{\n  height: 100%;\n  position: relative;\n}\n.json-editor >>> .CodeMirror {\n  height: auto;\n  min-height: 300px;\n}\n.json-editor >>> .CodeMirror-scroll{\n  min-height: 300px;\n}\n.json-editor >>> .cm-s-rubyblue span.cm-string {\n  color: #F08047;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=cf7191c2&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=cf7191c2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cf7191c2\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <v-container class=\"container--fluid grid-list-md\">\n    <v-row>\n      <v-col\n        class=\"flex-grow-1\"\n        cols=\"12\"\n      >\n        <v-alert\n          :value=\"true\"\n          color=\"info\"\n          outlined\n          dense\n        >\n          JsonEditor {{ $t('components.baseOn') }}\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/codemirror/CodeMirror\"\n          >CodeMirrorr</a>, lint {{ $t('components.baseOn') }} json-lint\n        </v-alert>\n      </v-col>\n      <v-col\n        class=\"flex-grow-1\"\n        cols=\"12\"\n      >\n        <json-editor\n          ref=\"jsonEditor\"\n          v-model=\"value\"\n        />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport JsonEditor from '@/demo/components/JsonEditor/index.vue';\n\nconst jsonData = '[{\"items\":[{\"market_type\":\"forexdata\",\"symbol\":\"XAUUSD\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"UKOIL\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"CORN\"}],\"name\":\"\"},'\n  + '{\"items\":[{\"market_type\":\"forexdata\",\"symbol\":\"XAUUSD\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"XAGUSD\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"AUTD\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"AGTD\"}],\"name\":\"Precious metal\"},'\n  + '{\"items\":[{\"market_type\":\"forexdata\",\"symbol\":\"CORN\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"WHEAT\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"SOYBEAN\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"SUGAR\"}],\"name\":\"Agricultural products\"},'\n  + '{\"items\":[{\"market_type\":\"forexdata\",\"symbol\":\"UKOIL\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"USOIL\"},'\n  + '{\"market_type\":\"forexdata\",\"symbol\":\"NGAS\"}],\"name\":\"Energy and Chemical\"}]';\n\nexport default {\n  name: 'JsonEditorDemo',\n  components: { JsonEditor },\n  data: () => ({\n    value: JSON.parse(jsonData),\n  }),\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./jsonEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./jsonEditor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./jsonEditor.vue?vue&type=template&id=7a83527f&\"\nimport script from \"./jsonEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./jsonEditor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAlert,VCol,VContainer,VRow})\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n\n  function showTooltip(e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip\";\n    tt.appendChild(content.cloneNode(true));\n    document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(e, content, node) {\n    var tooltip = showTooltip(e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, options, hasGutter) {\n    this.marked = [];\n    this.options = options;\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  function parseOptions(_cm, options) {\n    if (options instanceof Function) return {getAnnotations: options};\n    if (!options || options === true) options = {};\n    return options;\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function makeMarker(labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n        tip.innerHTML = ann.messageHTML;\n    } else {\n        tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations, passOptions) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, passOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint, options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var passOptions = options.options || options;\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations, passOptions)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), passOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    clearMarks(cm);\n    var state = cm.state.lint, options = state.options;\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(tipLabel, maxSeverity, anns.length > 1,\n                                                       state.options.tooltips));\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay || 500);\n  }\n\n  function popupTooltips(annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter);\n      if (state.options.lintOnChange !== false)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    if (this.state.lint) startLinting(this);\n  });\n});\n","require(\"!!/home/travis/build/NelsonEAX/vue-vuetify-admin/node_modules/script-loader/addScript.js\")(require(\"!!/home/travis/build/NelsonEAX/vue-vuetify-admin/node_modules/raw-loader/index.js!/home/travis/build/NelsonEAX/vue-vuetify-admin/node_modules/jsonlint/lib/jsonlint.js\"))","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=cf7191c2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=cf7191c2&scoped=true&lang=css&\"","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Depends on jsonlint.js from https://github.com/zaach/jsonlint\n\n// declare global: jsonlint\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"lint\", \"json\", function(text) {\n  var found = [];\n  if (!window.jsonlint) {\n    if (window.console) {\n      window.console.error(\"Error: window.jsonlint not defined, CodeMirror JSON linting cannot run.\");\n    }\n    return found;\n  }\n  // for jsonlint's web dist jsonlint is exported as an object with a single property parser, of which parseError\n  // is a subproperty\n  var jsonlint = window.jsonlint.parser || window.jsonlint\n  jsonlint.parseError = function(str, hash) {\n    var loc = hash.loc;\n    found.push({from: CodeMirror.Pos(loc.first_line - 1, loc.first_column),\n                to: CodeMirror.Pos(loc.last_line - 1, loc.last_column),\n                message: str});\n  };\n  try { jsonlint.parse(text); }\n  catch(e) {}\n  return found;\n});\n\n});\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"error\", \"error\");\n    } else if (ch == \"<\" && stream.match(\"!--\") || ch == \"-\" && stream.match(\"->\")) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    if (type == \"import\") return cont(expression);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(expression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(isTS ? classfield : functiondef, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(isTS ? classfield : functiondef, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});\n"],"sourceRoot":""}