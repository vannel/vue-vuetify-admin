{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/components/VCounter/VCounter.js","webpack:///./node_modules/vuetify/lib/components/VCounter/index.js","webpack:///./node_modules/vuetify/lib/mixins/intersectable/index.js","webpack:///./node_modules/vuetify/lib/components/VTextField/VTextField.js"],"names":["mixins","extend","name","functional","props","value","type","Number","String","default","max","h","ctx","parseInt","content","isGreater","staticClass","class","intersectable","options","window","inserted","this","$el","handler","onObserve","unbind","methods","entries","observer","isIntersecting","i","length","onVisible","callback","console","baseMixins","VInput","dirtyTypes","directives","ripple","inheritAttrs","appendOuterIcon","autofocus","Boolean","clearable","clearIcon","counter","counterValue","Function","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","call","isSingle","isSolo","isEnclosed","internalValue","toString","lazyValue","val","$emit","isDirty","includes","hasLabel","offset","labelValue","$vuetify","rtl","left","right","isLabelActive","isFocused","watch","$nextTick","setLabelWidth","setPrefixWidth","$attrs","hasOwnProperty","onFocus","setPrependWidth","requestAnimationFrame","e","$refs","input","blur","focus","slot","$slots","push","genIcon","genSlot","appendIcon","genInputSlot","prepend","genPrependInnerSlot","children","unshift","icon","clearableCallback","attrs$","maxlength","$createElement","dark","light","computedCounterValue","genFieldset","genTextFieldSlot","genClearIcon","genIconSlot","genProgress","attrs","genLegend","showLabel","absolute","color","validationState","disabled","focused","for","computedId","labelPosition","VLabel","width","span","domProps","innerHTML","style","undefined","listeners","Object","assign","listeners$","id","readonly","on","onBlur","onInput","keydown","onKeyDown","ref","hideDetails","messagesNode","genMessages","counterNode","genCounter","genLabel","genAffix","genInput","document","activeElement","target","validity","keyCode","enter","preventDefault","stopPropagation","onMouseDown","hasMouseDown","onMouseUp","Math","min","scrollWidth","offsetWidth","hasColor"],"mappings":"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","file":"js/chunk-33eab2b1.3abad1ae.js","sourcesContent":["// Styles\nimport \"../../../src/components/VCounter/VCounter.sass\"; // Mixins\n\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable';\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n  functional: true,\n  props: {\n    value: {\n      type: [Number, String],\n      default: ''\n    },\n    max: [Number, String]\n  },\n\n  render(h, ctx) {\n    const {\n      props\n    } = ctx;\n    const max = parseInt(props.max, 10);\n    const value = parseInt(props.value, 10);\n    const content = max ? `${value} / ${max}` : String(props.value);\n    const isGreater = max && value > max;\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx)\n      }\n    }, content);\n  }\n\n});\n//# sourceMappingURL=VCounter.js.map","import VCounter from './VCounter';\nexport { VCounter };\nexport default VCounter;\n//# sourceMappingURL=index.js.map","// Directives\nimport Intersect from '../../directives/intersect'; // Utilities\n\nimport { consoleWarn } from '../../util/console'; // Types\n\nimport Vue from 'vue';\nexport default function intersectable(options) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({\n      name: 'intersectable'\n    });\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted() {\n      Intersect.inserted(this.$el, {\n        name: 'intersect',\n        value: {\n          handler: this.onObserve\n        }\n      });\n    },\n\n    destroyed() {\n      Intersect.unbind(this.$el);\n    },\n\n    methods: {\n      onObserve(entries, observer, isIntersecting) {\n        if (!isIntersecting) return;\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = this[options.onVisible[i]];\n\n          if (typeof callback === 'function') {\n            callback();\n            continue;\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options');\n        }\n      }\n\n    }\n  });\n}\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\"; // Extensions\n\nimport VInput from '../VInput'; // Components\n\nimport VCounter from '../VCounter';\nimport VLabel from '../VLabel'; // Mixins\n\nimport Intersectable from '../../mixins/intersectable';\nimport Loadable from '../../mixins/loadable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nimport { breaking, consoleWarn } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VInput, Intersectable({\n  onVisible: ['setLabelWidth', 'setPrefixWidth', 'setPrependWidth']\n}), Loadable);\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-text-field',\n  directives: {\n    ripple\n  },\n  inheritAttrs: false,\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear'\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false\n  }),\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped\n      };\n    },\n\n    computedCounterValue() {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue);\n      }\n\n      return (this.internalValue || '').toString().length;\n    },\n\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit('input', this.lazyValue);\n      }\n\n    },\n\n    isDirty() {\n      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput;\n    },\n\n    isEnclosed() {\n      return this.filled || this.isSolo || this.outlined || this.fullWidth;\n    },\n\n    isLabelActive() {\n      return this.isDirty || dirtyTypes.includes(this.type);\n    },\n\n    isSingle() {\n      return this.isSolo || this.singleLine || this.fullWidth || // https://material.io/components/text-fields/#filled-text-field\n      this.filled && !this.hasLabel;\n    },\n\n    isSolo() {\n      return this.solo || this.soloInverted;\n    },\n\n    labelPosition() {\n      let offset = this.prefix && !this.labelValue ? this.prefixWidth : 0;\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth;\n      return this.$vuetify.rtl === this.reverse ? {\n        left: offset,\n        right: 'auto'\n      } : {\n        left: 'auto',\n        right: offset\n      };\n    },\n\n    showLabel() {\n      return this.hasLabel && (!this.isSingle || !this.isLabelActive && !this.placeholder);\n    },\n\n    labelValue() {\n      return !this.isSingle && Boolean(this.isFocused || this.isLabelActive || this.placeholder);\n    }\n\n  },\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n\n    label() {\n      this.$nextTick(this.setLabelWidth);\n    },\n\n    prefix() {\n      this.$nextTick(this.setPrefixWidth);\n    },\n\n    isFocused: 'updateValue',\n\n    value(val) {\n      this.lazyValue = val;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this);\n    }\n    /* istanbul ignore next */\n\n\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this);\n    }\n    /* istanbul ignore if */\n\n\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this);\n    }\n  },\n\n  mounted() {\n    this.autofocus && this.onFocus();\n    this.setLabelWidth();\n    this.setPrefixWidth();\n    this.setPrependWidth();\n    requestAnimationFrame(() => this.isBooted = true);\n  },\n\n  methods: {\n    /** @public */\n    focus() {\n      this.onFocus();\n    },\n\n    /** @public */\n    blur(e) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur();\n      });\n    },\n\n    clearableCallback() {\n      this.$refs.input && this.$refs.input.focus();\n      this.$nextTick(() => this.internalValue = null);\n    },\n\n    genAppendSlot() {\n      const slot = [];\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer']);\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n\n    genPrependInnerSlot() {\n      const slot = [];\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner']);\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'));\n      }\n\n      return this.genSlot('prepend', 'inner', slot);\n    },\n\n    genIconSlot() {\n      const slot = [];\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append']);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'inner', slot);\n    },\n\n    genInputSlot() {\n      const input = VInput.options.methods.genInputSlot.call(this);\n      const prepend = this.genPrependInnerSlot();\n\n      if (prepend) {\n        input.children = input.children || [];\n        input.children.unshift(prepend);\n      }\n\n      return input;\n    },\n\n    genClearIcon() {\n      if (!this.clearable) return null;\n      const icon = this.isDirty ? 'clear' : '';\n      return this.genSlot('append', 'inner', [this.genIcon(icon, this.clearableCallback)]);\n    },\n\n    genCounter() {\n      if (this.counter === false || this.counter == null) return null;\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter;\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue\n        }\n      });\n    },\n\n    genDefaultSlot() {\n      return [this.genFieldset(), this.genTextFieldSlot(), this.genClearIcon(), this.genIconSlot(), this.genProgress()];\n    },\n\n    genFieldset() {\n      if (!this.outlined) return null;\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true\n        }\n      }, [this.genLegend()]);\n    },\n\n    genLabel() {\n      if (!this.showLabel) return null;\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      };\n      return this.$createElement(VLabel, data, this.$slots.label || this.label);\n    },\n\n    genLegend() {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0;\n      const span = this.$createElement('span', {\n        domProps: {\n          innerHTML: '&#8203;'\n        }\n      });\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined\n        }\n      }, [span]);\n    },\n\n    genInput() {\n      const listeners = Object.assign({}, this.listeners$);\n      delete listeners['change']; // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue\n        },\n        attrs: { ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown\n        }),\n        ref: 'input'\n      });\n    },\n\n    genMessages() {\n      if (this.hideDetails === true) return null;\n      const messagesNode = VInput.options.methods.genMessages.call(this);\n      const counterNode = this.genCounter();\n      if (this.hideDetails === 'auto' && !messagesNode && !counterNode) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [messagesNode, counterNode]);\n    },\n\n    genTextFieldSlot() {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, this.genInput(), this.suffix ? this.genAffix('suffix') : null]);\n    },\n\n    genAffix(type) {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type\n      }, this[type]);\n    },\n\n    onBlur(e) {\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick() {\n      if (this.isFocused || this.disabled || !this.$refs.input) return;\n      this.$refs.input.focus();\n    },\n\n    onFocus(e) {\n      if (!this.$refs.input) return;\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        e && this.$emit('focus', e);\n      }\n    },\n\n    onInput(e) {\n      const target = e.target;\n      this.internalValue = target.value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue);\n      this.$emit('keydown', e);\n    },\n\n    onMouseDown(e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e);\n    },\n\n    onMouseUp(e) {\n      if (this.hasMouseDown) this.focus();\n      VInput.options.methods.onMouseUp.call(this, e);\n    },\n\n    setLabelWidth() {\n      if (!this.outlined || !this.$refs.label) return;\n      this.labelWidth = Math.min(this.$refs.label.scrollWidth * 0.75 + 6, this.$el.offsetWidth - 24);\n    },\n\n    setPrefixWidth() {\n      if (!this.$refs.prefix) return;\n      this.prefixWidth = this.$refs.prefix.offsetWidth;\n    },\n\n    setPrependWidth() {\n      if (!this.outlined || !this.$refs['prepend-inner']) return;\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth;\n    },\n\n    updateValue(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=VTextField.js.map"],"sourceRoot":""}